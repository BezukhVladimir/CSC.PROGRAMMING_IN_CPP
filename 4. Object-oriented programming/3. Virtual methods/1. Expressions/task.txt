<p>В этом задании вам предлагается разработать иерархию классов Expression для представления арифметических выражений. Конкретнее, вам нужно определить три класса: Expression — базовый класс иерархии, Number — для представления чисел и BinaryOperation — класс описывающий бинарную операцию (+, ­-, * или /).</p><p>Класс Number должен хранить значение типа double.</p><p>Класс BinaryOperation должен хранить указатель на левый и правый операнды, которые сами являются арифметическими выражениями, а также тип операции (+, ­-, * или /), которую нужно над ними произвести.</p><p>Во всех классах должен быть метод evaluate, который возвращает значение типа double — значение соответствующего арифметического выражения, например, значение экземпляра типа Number — это число, которое он хранит, а если у вас есть объект BinaryOperation с операцией +, то нужно вычислить значения левого и правого операнда и вернуть их сумму.</p><p>В данном задании вам нужно расставить ключевое слово virtual там, где
 это необходимо, определить метод evaluate там, где его не хватает, а 
также реализовать деструкторы, там где они нужны.</p><p>При выполнении 
этого задания учтите, что при уничтожении объекта BinaryOperation он 
отвечает за уничтожение левого и правого операндов (гарантируется, что 
они выделены в динамической памяти).</p><p>Например, выражению 3 + 4.5 * 5 будет соответствовать следующий код:</p><pre><code class="language-cpp">// сначала создаём объекты для подвыражения 4.5 * 5
Expression * sube = new BinaryOperation(new Number(4.5), '*', new Number(5));
// потом используем его в выражении для +
Expression * expr = new BinaryOperation(new Number(3), '+', sube);

// вычисляем и выводим результат: 25.5
std::cout &lt;&lt; expr-&gt;evaluate() &lt;&lt; std::endl;

// тут освобождаются *все* выделенные объекты
// (например, sube будет правым операндом expr, поэтому его удалять не нужно)
delete expr;</code></pre><br><p><b>Требования к реализации:</b> при выполнении этого задания не нужно вводить или выводить что-либо. Вы можете заводить любые вспомогательные функции, методы или классы, но не нужно реализовывать функцию main.</p><br><br><font color="gray">Memory limit: 32 MB</font><br><font color="gray">Time limit: 1 second</font><br><br>
