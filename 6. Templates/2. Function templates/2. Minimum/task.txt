<p>Реализуйте шаблонную функцию minimum, которая находит минимальный элемент, который хранится в экземпляре шаблонного класса Array, при этом типовой параметр шаблона Array может быть произвольным. Чтобы сравнивать объекты произвольного типа, на вход функции также будет передаваться компаратор, в качестве компаратора может выступать функция или объект класса с перегруженным оператором "()". Примеры вызова функции minimum:</p><pre><code>bool less(int a, int b) { return a &lt; b; }
struct Greater { bool operator()(int a, int b) const { return b &lt; a; } };</code></pre><pre><code>Array&lt;int&gt; ints(3);
ints[0] = 10;
ints[1] = 2;
ints[2] = 15;
int min = minimum(ints, less); // в min должно попасть число 2
int max = minimum(ints, Greater()); // в max должно попасть число 15</code></pre><br><b>Sample Input:</b><br><pre><code class="language-no-highlight">There are no tests for this task</code></pre><br><b>Sample Output:</b><br><pre><code class="language-no-highlight">OK</code></pre><br><br><br><font color="gray">Memory limit: 256 MB</font><br><font color="gray">Time limit: 5 seconds</font><br><br>
